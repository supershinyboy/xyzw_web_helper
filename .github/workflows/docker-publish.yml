name: Build And Push Docker Image

on:
  push:
    paths-ignore:
      - "*.md"
    branches:
      - "main"
      - "docker-main"
    tags:
      - "v*"
  pull_request:
    branches:
      - "docker-main"
  schedule:
    - cron: "00 20 * * *"
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          flavor: |
            latest=false
          tags: |
            type=schedule,pattern=nightly
            type=edge
            type=ref,event=pr
            type=ref,event=branch,enable=${{ github.ref != format('refs/heads/{0}', 'docker-main') }}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'docker-main') }}
            type=semver,pattern={{version}},prefix=v
            type=semver,pattern={{major}}.{{minor}},prefix=v
            type=semver,pattern={{major}},prefix=v

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          build-args: |
            MAINTAINER=${{ github.repository_owner }}
            QL_BRANCH=${{ github.ref_name }}
            SOURCE_COMMIT=${{ github.sha }}
          # linux/s390x npm 暂不可用
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/386
          context: .
          file: ./docker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=ghcr.io/supershinyboy/xyzw_web_helper:cache
          cache-to: type=registry,ref=ghcr.io/supershinyboy/xyzw_web_helper:cache,mode=max
      - name: Image digest
        run: |
          echo ${{ steps.meta.outputs.digest }}